# Generated by Django 5.1 on 2025-05-04 05:21

import django.core.validators
import django.db.models.deletion
import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='RequestType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField(blank=True)),
                ('is_active', models.BooleanField(default=True)),
            ],
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('first_name', models.CharField(max_length=255, verbose_name='Имя сотрудника')),
                ('last_name', models.CharField(max_length=255, verbose_name='Фамилия сотрудника')),
                ('patronymic', models.CharField(blank=True, max_length=255, null=True, verbose_name='Отчество сотрудника')),
                ('email', models.EmailField(max_length=254, unique=True, validators=[django.core.validators.EmailValidator('Enter a valid email address.')], verbose_name='email address')),
                ('role', models.CharField(blank=True, choices=[('specialist', 'Специалист'), ('director', 'Генеральный директор'), ('chairman', 'Председатель'), ('accountant', 'Бухгалтер')], max_length=20, verbose_name='Роль')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'Пользователь',
                'verbose_name_plural': 'Пользователи',
                'ordering': ('-date_joined',),
            },
        ),
        migrations.CreateModel(
            name='Request',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('subject_type', models.CharField(choices=[('individual', 'Физическое лицо'), ('organization', 'Юридическое лицо')], max_length=20)),
                ('full_name_or_org', models.CharField(max_length=255)),
                ('phone_number', models.CharField(max_length=20)),
                ('actual_address', models.TextField()),
                ('registration_address', models.TextField()),
                ('description', models.TextField()),
                ('incoming_letter', models.FileField(blank=True, null=True, upload_to='letters/')),
                ('requested_amount', models.DecimalField(decimal_places=2, max_digits=12)),
                ('approved_amount_director', models.DecimalField(blank=True, decimal_places=2, max_digits=12, null=True)),
                ('approved_amount_chairman', models.DecimalField(blank=True, decimal_places=2, max_digits=12, null=True)),
                ('status', models.CharField(choices=[('new', 'Новый'), ('specialist_review', 'На проверке у специалиста'), ('approved_by_specialist', 'Одобрено специалистом'), ('director_review', 'На рассмотрении у Генерального директора'), ('rejected_by_director', 'Отклонено директором'), ('approved_by_director', 'Одобрено директором'), ('chairman_review', 'На рассмотрении у председателя'), ('rejected_by_chairman', 'Отклонено председателем'), ('approved_by_chairman', 'Одобрено председателем'), ('awaiting_payment', 'Ожидает выплаты'), ('paid', 'Выплачено'), ('payment_pending', 'Выплата в ожидании')], default='new', max_length=50)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('history', models.TextField(blank=True)),
                ('attachments', models.FileField(blank=True, null=True, upload_to='attachments/')),
                ('request_type', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='crm.requesttype')),
            ],
        ),
    ]
